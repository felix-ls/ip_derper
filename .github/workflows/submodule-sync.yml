name: 'Submodules Sync'

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:


jobs:
  sync:
    name: 'Submodules Sync'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true
          fetch-depth: 0

      - name: Update Submodule to Latest Release
        run: |
          latest_release=$(curl -sSL https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name')
          if [ -z "$latest_release" ] || [ "$latest_release" == "null" ]; then
            echo "❌ Failed to fetch latest release tag"
            exit 1
          fi
          echo "✅ Latest release: $latest_release"
          echo "latest_release=$latest_release" >> $GITHUB_ENV

          cd tailscale
          git fetch --tags
          git checkout $latest_release
          cd ..

      - name: Verify Build Before Commit
        run: |
          docker build -t temp-build-test .  # 或你的验证命令
          echo "✅ Build verification passed!"

      - name: Cache source hash
        id: cacheHash
        uses: actions/cache@v4
        with:
          path: |
            tailscale/
          key: ${{ hashFiles('tailscale/VERSION.txt') }}

      - name: Commit and Push if changed
        run: |
          git config --global user.name 'Git bot'
          git config --global user.email 'bot@noreply.github.com'

          if git diff --quiet && git diff --cached --quiet; then
            echo "✅ No changes detected. Nothing to commit."
          else
            echo "📝 Changes detected. Committing..."
            git add .
            git commit -m "chore: auto update submodule to ${{ env.latest_release }}"
            git push
            echo "✅ Pushed submodule update to ${{ env.latest_release }}"
          fi

      # 👇 只有真实内容变更才触发构建
      - name: Trigger build
        if: steps.cacheHash.outputs.cache-hit != 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: Pushed submodule update to ${{ env.latest_release }}

      # 👇 清理旧运行记录
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 1